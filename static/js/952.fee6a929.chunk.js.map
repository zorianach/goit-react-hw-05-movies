{"version":3,"file":"static/js/952.fee6a929.chunk.js","mappings":"+SAGMA,EAAU,+BACVC,EAAM,mCAAmC,SAEhCC,IAAS,OAAAC,EAAAC,MAAC,KAADC,UAAA,UAAAF,IAIvB,OAJuBA,GAAAG,EAAAA,EAAAA,GAAAC,IAAAA,MAAxB,SAAAC,IAAA,IAAAC,EAAAC,EAAAC,EAAA,OAAAJ,IAAAA,MAAA,SAAAK,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAC4D,OAAlDL,EAAG,GAAAM,OAAMf,EAAO,gCAAAe,OAA+Bd,GAAGW,EAAAE,KAAA,EACnCE,EAAAA,EAAAA,IAAUP,GAAK,KAAD,EAAxB,OAAwBC,EAAAE,EAAAK,KAA5BN,EAAID,EAAJC,KAAIC,EAAAM,OAAA,SACJP,EAAKQ,SAAO,wBAAAP,EAAAQ,OAAA,GAAAZ,EAAA,MACtBJ,MAAA,KAAAC,UAAA,CAAC,SAEagB,EAAeC,GAAA,OAAAC,EAAAnB,MAAC,KAADC,UAAA,UAAAkB,IAI7B,OAJ6BA,GAAAjB,EAAAA,EAAAA,GAAAC,IAAAA,MAA9B,SAAAiB,EAAgCC,GAAK,IAAAhB,EAAAiB,EAAAf,EAAA,OAAAJ,IAAAA,MAAA,SAAAoB,GAAA,cAAAA,EAAAd,KAAAc,EAAAb,MAAA,OACgC,OAA3DL,EAAG,GAAAM,OAAMf,EAAO,0BAAAe,OAAyBd,EAAG,WAAAc,OAAUU,GAAKE,EAAAb,KAAA,EAC5CE,EAAAA,EAAAA,IAAUP,GAAK,KAAD,EAAxB,OAAwBiB,EAAAC,EAAAV,KAA5BN,EAAIe,EAAJf,KAAIgB,EAAAT,OAAA,SACJP,EAAKQ,SAAO,wBAAAQ,EAAAP,OAAA,GAAAI,EAAA,MACtBpB,MAAA,KAAAC,UAAA,CAAC,SAEauB,EAAeC,GAAA,OAAAC,EAAA1B,MAAC,KAADC,UAAA,UAAAyB,IAI7B,OAJ6BA,GAAAxB,EAAAA,EAAAA,GAAAC,IAAAA,MAA9B,SAAAwB,EAA+BC,GAAO,IAAAvB,EAAAwB,EAAAtB,EAAA,OAAAJ,IAAAA,MAAA,SAAA2B,GAAA,cAAAA,EAAArB,KAAAqB,EAAApB,MAAA,OACoB,OAAhDL,EAAG,GAAAM,OAAMf,EAAO,WAAAe,OAAUiB,EAAO,aAAAjB,OAAYd,GAAGiC,EAAApB,KAAA,EACjCE,EAAAA,EAAAA,IAAUP,GAAK,KAAD,EAAxB,OAAwBwB,EAAAC,EAAAjB,KAA5BN,EAAIsB,EAAJtB,KAAIuB,EAAAhB,OAAA,SACJP,GAAI,wBAAAuB,EAAAd,OAAA,GAAAW,EAAA,MACd3B,MAAA,KAAAC,UAAA,CAAC,SAEa8B,EAAYC,GAAA,OAAAC,EAAAjC,MAAC,KAADC,UAAA,UAAAgC,IAI1B,OAJ0BA,GAAA/B,EAAAA,EAAAA,GAAAC,IAAAA,MAA3B,SAAA+B,EAA4BN,GAAO,IAAAvB,EAAA8B,EAAA,OAAAhC,IAAAA,MAAA,SAAAiC,GAAA,cAAAA,EAAA3B,KAAA2B,EAAA1B,MAAA,OAC+B,OAAxDL,EAAG,GAAAM,OAAMf,EAAO,WAAAe,OAAUiB,EAAO,qBAAAjB,OAAoBd,GAAGuC,EAAA1B,KAAA,EACvCE,EAAAA,EAAAA,IAAUP,GAAK,KAAD,EAAvB,OAAR8B,EAAQC,EAAAvB,KAAAuB,EAAAtB,OAAA,SACPqB,EAAS5B,MAAI,wBAAA6B,EAAApB,OAAA,GAAAkB,EAAA,MACvBlC,MAAA,KAAAC,UAAA,CAAC,SAEaoC,EAAeC,GAAA,OAAAC,EAAAvC,MAAC,KAADC,UAAA,UAAAsC,IAI7B,OAJ6BA,GAAArC,EAAAA,EAAAA,GAAAC,IAAAA,MAA9B,SAAAqC,EAA+BZ,GAAO,IAAAvB,EAAA8B,EAAA,OAAAhC,IAAAA,MAAA,SAAAsC,GAAA,cAAAA,EAAAhC,KAAAgC,EAAA/B,MAAA,OAC4B,OAAxDL,EAAG,GAAAM,OAAMf,EAAO,WAAAe,OAAUiB,EAAO,qBAAAjB,OAAoBd,GAAG4C,EAAA/B,KAAA,EACvCE,EAAAA,EAAAA,IAAUP,GAAK,KAAD,EAAvB,OAAR8B,EAAQM,EAAA5B,KAAA4B,EAAA3B,OAAA,SACPqB,EAAS5B,MAAI,wBAAAkC,EAAAzB,OAAA,GAAAwB,EAAA,MACvBxC,MAAA,KAAAC,UAAA,C,4CClBD,IAdgB,SAAHyC,GAAuB,IAAjBC,EAASD,EAATC,UACjB,OACEC,EAAAA,EAAAA,KAACC,EAAAA,GAAW,CACRC,QAASH,EACTI,OAAO,KACPC,MAAM,KACNC,MAAM,mBACNC,UAAU,uBACVC,aAAc,CAAC,EACfC,aAAa,IAGrB,C,qGCdiBC,EAAWC,EAAQ,KAA5BC,QAGFC,EAAeH,EAAOI,GAAEC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,iMAcxBC,EAAYP,EAAOQ,GAAEC,IAAAA,GAAAH,EAAAA,EAAAA,GAAA,qNAerBI,EAAOV,EAAOW,IAAGC,IAAAA,GAAAN,EAAAA,EAAAA,GAAA,uLAahBO,EAAMb,EAAOc,IAAGC,IAAAA,GAAAT,EAAAA,EAAAA,GAAA,wG,SCXvB,EA7Bc,SAAFjB,GAAgB,IAAZ2B,EAAM3B,EAAN2B,OACNC,GAAWC,EAAAA,EAAAA,MAEjB,OACI3B,EAAAA,EAAAA,KAAA4B,EAAAA,SAAA,CAAAC,UACA7B,EAAAA,EAAAA,KAACY,EAAY,CAAAiB,SACZJ,EAAOK,KAAI,SAAAC,GAAA,IAAEC,EAAED,EAAFC,GAAIC,EAAcF,EAAdE,eAAgBC,EAAWH,EAAXG,YAAW,OAEzClC,EAAAA,EAAAA,KAACgB,EAAS,CAAAa,UACN7B,EAAAA,EAAAA,KAACmC,EAAAA,GAAI,CAACC,MAAO,CAAEC,KAAMX,GAAYY,GAAE,WAAAvE,OAAaiE,GAAKH,UACrDU,EAAAA,EAAAA,MAACpB,EAAI,CAAAU,SAAA,CACFK,GACClC,EAAAA,EAAAA,KAACsB,EAAG,CACFkB,IAAG,kCAAAzE,OAAoCmE,GACvCO,IAAKR,KAGPjC,EAAAA,EAAAA,KAAC0C,EAAAA,IAAkB,CAACC,KAAM,MAE3BV,QAXSD,EAcJ,OAKxB,C,+IC9BMY,EAAYnC,EAAAA,QAAAA,GAASK,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,mI,SCQ3B,EARc,SAAHjB,GAAmB,IAAb+C,EAAK/C,EAAL+C,MACf,OACE7C,EAAAA,EAAAA,KAAA4B,EAAAA,SAAA,CAAAC,UACE7B,EAAAA,EAAAA,KAAC4C,EAAS,CAAAf,SAAEgB,KAGlB,E,kBCeQC,EAAarC,EAAAA,QAAAA,KAAWK,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,qOAYxBgC,EAAetC,EAAAA,QAAAA,OAAaS,IAAAA,GAAAH,EAAAA,EAAAA,GAAA,igBAkC5BiC,GAZcvC,EAAAA,QAAAA,EAAQY,IAAAA,GAAAN,EAAAA,EAAAA,GAAA,iMAYRN,EAAAA,QAAAA,MAAYe,IAAAA,GAAAT,EAAAA,EAAAA,GAAA,yT,iBCrE5BkC,EAAkB,CACpBC,SAAU,gBACVC,QAAS,IACT/C,MAAO,QACPgD,SAAU,QC+Cd,EA5CkB,SAAHtD,GAAoB,IAAfuD,EAAQvD,EAARuD,SAChBC,GAA0BC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA/B7E,EAAK+E,EAAA,GAAEE,EAAQF,EAAA,GAyBd,OACIjB,EAAAA,EAAAA,MAACO,EAAU,CAACa,SAnBC,SAAAC,GACjBA,EAAEC,iBAMGpF,GAKL4E,EAAS5E,GAGTiF,EAAS,KAPLI,EAAAA,OAAAA,KAAY,8BAA+Bb,EAQnD,EAG2CpB,SAAA,EAC/B7B,EAAAA,EAAAA,KAACgD,EAAW,CACXe,MAAStF,EACTuF,SA1BS,SAACC,GACnBP,EAASO,EAAMC,OAAOH,MAAMI,cAAcC,OAC9C,EAyBaC,KAAK,OACLC,KAAK,QACLC,aAAa,MACbC,WAAS,EACTC,YAAY,qBAEdzE,EAAAA,EAAAA,KAAC+C,EAAY,CAAEsB,KAAK,SAAQxC,UACvB7B,EAAAA,EAAAA,KAAC0E,EAAAA,IAAW,QAI5B,ECDR,EAxCmB,WAAO,IAADC,EACvBC,GAAwCC,EAAAA,EAAAA,MAAiBC,GAAArB,EAAAA,EAAAA,GAAAmB,EAAA,GAAlDG,EAAYD,EAAA,GAAEE,EAAeF,EAAA,GACpCxB,GAA4BC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAjC7B,EAAM+B,EAAA,GAAEyB,EAASzB,EAAA,GACxB0B,GAA8B3B,EAAAA,EAAAA,WAAS,GAAM4B,GAAA1B,EAAAA,EAAAA,GAAAyB,EAAA,GAAtCE,EAAOD,EAAA,GAAEE,EAAUF,EAAA,GAC1BG,GAA0B/B,EAAAA,EAAAA,UAAS,MAAKgC,GAAA9B,EAAAA,EAAAA,GAAA6B,EAAA,GAAjCE,EAAKD,EAAA,GAAEE,EAAQF,EAAA,GAEhBG,EAAuC,QAA5Bf,EAAGI,EAAaY,IAAI,gBAAQ,IAAAhB,EAAAA,EAAI,GAqBjD,OAdAiB,EAAAA,EAAAA,YAAU,WACHF,IAELL,GAAW,IACXhH,EAAAA,EAAAA,IAAgBqH,GACbG,MAAK,SAACC,GACLC,QAAQC,IAAIF,GACZb,EAAUa,EACZ,IACCG,OAAM,SAAAT,GAAK,OAAIC,EAASD,EAAM,IAC9BU,SAAQ,kBAAMb,GAAW,EAAM,IACpC,GAAG,CAACK,KAIFnD,EAAAA,EAAAA,MAAAX,EAAAA,SAAA,CAAAC,SAAA,EACG7B,EAAAA,EAAAA,KAACmG,EAAK,CAACtD,MAAM,0BACb2C,IAASxF,EAAAA,EAAAA,KAAA,MAAA6B,SAAK2D,EAAMY,WACrBpG,EAAAA,EAAAA,KAACqG,EAAS,CAACtC,MAAO2B,EAAarC,SAvBZ,SAAA5E,GAErBuG,EAD+B,KAAVvG,EAAe,CAAEA,MAAAA,GAAU,CAAC,EAEnD,IAqBKgD,EAAO6E,OAAS,IAAKtG,EAAAA,EAAAA,KAACuG,EAAAA,EAAM,CAAC9E,OAAQA,EAAOI,UAC1C7B,EAAAA,EAAAA,KAACwG,EAAAA,GAAM,MAETpB,IAAWpF,EAAAA,EAAAA,KAACyG,EAAAA,EAAM,MAGzB,C","sources":["api/api.js","components/Loader/Loader.jsx","components/Movies/Movies.styled.jsx","components/Movies/Movies.jsx","components/Title/Title.styled.jsx","components/Title/Title.jsx","components/Searchbar-hdks/Searchbar.styled.jsx","components/Notify/Notify.js","components/Searchbar-hdks/SearchBar.jsx","pages/MoviesPage.jsx"],"sourcesContent":["import axios from 'axios';\n\n\nconst baseURL = \"https://api.themoviedb.org/3\";\nconst KEY = \"b8999c34735e65003074ef0d1b66827f\";\n\nasync function getMovies() {\n    const url = `${baseURL}/trending/movie/day?api_key=${KEY}`\n    const {data} = await axios.get(url);\n    return data.results;\n};\n\nasync function getSearchMovies( query) {\n    const url = `${baseURL}/search/movie?api_key=${KEY}&query=${query}`\n    const {data} = await axios.get(url);\n    return data.results;\n};\n\nasync function getMovieDetails(movieId) {\n    const url = `${baseURL}/movie/${movieId}?api_key=${KEY}`\n    const {data} = await axios.get(url);\n    return data;\n};\n\nasync function getMovieCast(movieId) {\n    const url = `${baseURL}/movie/${movieId}/credits?api_key=${KEY}`\n    const response = await axios.get(url);\n    return response.data;\n};\n\nasync function getMovieReviews(movieId) {\n    const url = `${baseURL}/movie/${movieId}/reviews?api_key=${KEY}`\n    const response = await axios.get(url);\n    return response.data;\n};\n\nexport {getMovies, getSearchMovies, getMovieDetails, getMovieCast, getMovieReviews}","import { ProgressBar } from 'react-loader-spinner';\n\n const Loader = ({ isLoading }) => {\n  return (\n    <ProgressBar\n        visible={isLoading}\n        height=\"80\"\n        width=\"80\"\n        color=\"rgb(81, 29, 131)\"\n        ariaLabel=\"progress-bar-loading\"\n        wrapperStyle={{}}\n        wrapperClass=\"\"\n        />\n  );\n};\n\nexport default Loader;\n","const { default: styled } = require(\"styled-components\");\n\n\nconst MoviesLayout = styled.ul`\ndisplay: flex;\nflex-wrap: wrap;\njustify-content: center;\ngap: 20px;\nmargin-top: 16px;\nmargin-bottom: 0;\npadding: 0;\nmargin-left: auto;\nmargin-right: auto;\ncolor: #111111;\n\n`\n\nconst MovieItem = styled.li`\n   \n    :hover {\n        background-color: #faba08;\n        // color: #111111;\n    }\n    // :not(:last-child) {\n    //     margin-bottom: 6px;\n    // };\n\n    a{\n        color: #111111;\n    }\n`\n\nconst Card = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 15px;\n  text-align: center;\n  width: 200px;\n  height: 340px;\n  border-radius: 15px;\n\n  :hover {\n    scale: 1.07;\n`;\n\n const Img = styled.img`\n    width: 100%;\n    height: 260px;\n    object-fit: cover; \n    border-radius: 15px;\n   \n`;\n\nexport {MoviesLayout, MovieItem, Card, Img}","import { Link, useLocation } from \"react-router-dom\";\nimport { AiOutlineFileImage } from 'react-icons/ai';\nimport { MoviesLayout, MovieItem, Card, Img } from \"./Movies.styled\";\n\n\nconst Movies =({movies})=> {\n    const location = useLocation();\n// console.log(movies)\n    return (\n        <>\n        <MoviesLayout>\n        {movies.map(({id, original_title, poster_path}) => (\n            // console.log(movie)\n            <MovieItem key={id}>\n                <Link state={{ from: location }} to={`/movies/${id}`}>\n                <Card>\n                  {poster_path ? (\n                    <Img\n                      src={`https://image.tmdb.org/t/p/w300${poster_path}`}\n                      alt={original_title}\n                    />\n                  ) : (\n                    <AiOutlineFileImage size={200} />\n                  )}\n                  {original_title}\n                </Card>\n                </Link>\n            </MovieItem>\n        ))}\n        </MoviesLayout>\n        </>\n    )\n}\n\nexport default Movies;","import styled from \"styled-components\";\n\nconst TitleText = styled.h2`\n//   text-align: center;\ncolor: rgb(32, 12, 51);\nmargin-left:10px;\n// padding-top: 10px;\n//   padding-bottom: 10px;\n`;\n\nexport {TitleText}","import { TitleText } from './Title.styled';\n\nconst Title = ({ title }) => {\n  return (\n    <>\n      <TitleText>{title}</TitleText>\n    </>\n  );\n};\n\nexport default Title;\n","import styled from 'styled-components';\n\n\n//  const Header = styled.div`\n//  top: 0;\n//  left: 0;\n//  position: sticky;\n//  z-index: 1100;\n//  display: flex;\n//  justify-content: center;\n//  align-items: center;\n//  min-height: 64px;\n//  padding-right: 24px;\n//  padding-left: 24px;\n//  padding-top: 12px;\n//  padding-bottom: 12px;\n//  color: #fff;\n//  background-color: #faba08;\n//  //  background-color: #3f51b5;\n//  box-shadow: 0px 2px 4px -1px rgba(0, 0, 0, 0.2),\n//    0px 4px 5px 0px rgba(0, 0, 0, 0.14), 0px 1px 10px 0px rgba(0, 0, 0, 0.12);`\n\n\n  const SearchForm = styled.form`\n  display: flex;\n    align-items: center;\n    width: 100%;\n    max-width: 400px;\n    background-color: #fff;\n    border-radius: 3px;\n    overflow: hidden;\n    border: 2px solid #faba08;\n    margin-left:10px;\n  `\n \n  const SearchButton = styled.button`\n  display: inline-block;\n    width: 48px;\n    height: 48px;\n    border: 0;\n    // background-image: url('https://image.flaticon.com/icons/svg/149/149852.svg');\n    background-size: 40%;\n    background-repeat: no-repeat;\n    background-position: center;\n    background-color: #f6e7bd;\n    //   border: 2px solid #faba08;\n\n    opacity: 0.6;\n    transition: opacity 250ms cubic-bezier(0.4, 0, 0.2, 1);\n    cursor: pointer;\n    outline: none;\n    \n    &:hover {\n      opacity: 1;\n    }\n  `\n  \n  const ButtonLabel = styled.p`\n  position: absolute;\n  width: 1px;\n  height: 1px;\n  padding: 0;\n  overflow: hidden;\n  clip: rect(0, 0, 0, 0);\n  white-space: nowrap;\n  clip-path: inset(50%);\n  border: 0;\n  `\n  \n  const SearchInput = styled.input`\n  display: inline-block;\n  width: 100%;\n  font: inherit;\n  font-size: 20px;\n  border:none;\n//   border: 2px solid #faba08;\n  outline: none;\n  padding: 10px 4px 10px 15px;\n//   padding-left: 15px;\n//   padding-right: 4px;\n\n  &::placeholder {\n    font: inherit;\n    font-size: 18px;\n  }\n  `\n  \n  export { SearchButton, SearchForm, SearchInput, ButtonLabel}","const paramsForNotify = {\n    position: 'center-center',\n    timeout: 4000,\n    width: '400px',\n    fontSize: '24px'\n  };\n\n  export {paramsForNotify}","import { useState } from \"react\";\nimport {  SearchButton, SearchForm, SearchInput } from \"./Searchbar.styled\";\nimport { SlMagnifier } from \"react-icons/sl\";\nimport { Notify } from \"notiflix\";\nimport { paramsForNotify } from \"components/Notify/Notify\";\n\n\nconst SearchBar = ({onSearch}) => {\n    const [query, setQuery] = useState('');\n\n        // зміни в інпуті\n        const onChangeInput = (event) => {\n            setQuery(event.target.value.toLowerCase().trim())\n        }; \n        \n        const handleSubmit = e => {\n            e.preventDefault();\n            // const { textQuery } = this.state;\n            // console.log(textQuery);\n            // const { onSubmit } = this.props;\n\n            // повідомлення\n            if (!query) {\n                Notify.info('Enter your request, please!', paramsForNotify);\n                return;\n            }\n            //фун-я onSubmit прийшла з Movies через пропси\n            onSearch(query);\n    \n            //очистка рядка пошука\n            setQuery('');\n        };\n\n            return(\n                <SearchForm onSubmit={handleSubmit}>\n                    <SearchInput\n                     value = {query}\n                     onChange = {onChangeInput}\n                     type=\"text\"\n                     name=\"query\"\n                     autoComplete=\"off\"\n                     autoFocus\n                     placeholder=\"Enter the movie\"\n                   />\n                   <SearchButton  type=\"submit\">\n                        <SlMagnifier />\n                    </SearchButton>\n                </SearchForm>\n            )\n        }\n\nexport default SearchBar;","import { useEffect, useState } from 'react';\nimport { Outlet, useSearchParams } from 'react-router-dom';\nimport Movies from '../components/Movies/Movies';\nimport Title from '../components/Title/Title';\nimport Loader from '../components/Loader/Loader';\nimport { getSearchMovies } from 'api/api';\nimport SearchBar from 'components/Searchbar-hdks/SearchBar';\n\nconst MoviesPage = () => {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [movies, setMovies] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  const moviesTitle = searchParams.get('query') ?? '';\n\n  const handleOnSubmit = query => {\n    const changeParams = query !== '' ? { query } : {};\n    setSearchParams(changeParams);\n  };\n\n  useEffect(() => {\n    if (!moviesTitle) return;\n\n    setLoading(true);\n    getSearchMovies(moviesTitle)\n      .then((movieByQuery ) => {\n        console.log(movieByQuery);\n        setMovies(movieByQuery);\n      })\n      .catch(error => setError(error))\n      .finally(() => setLoading(false));\n  }, [moviesTitle]);\n\n//   console.log(movies)\n  return (\n    <>\n       <Title title=\"Search for your movie\" />\n      {error && <h2>{error.message}</h2>}\n      <SearchBar value={moviesTitle} onSearch={handleOnSubmit} />\n      {movies.length > 0 && <Movies movies={movies}>\n         <Outlet/>\n    </Movies>}\n      {loading && <Loader />}\n    </>\n  );\n};\n\nexport default MoviesPage;\n"],"names":["baseURL","KEY","getMovies","_getMovies","apply","arguments","_asyncToGenerator","_regeneratorRuntime","_callee","url","_yield$axios$get","data","_context","prev","next","concat","axios","sent","abrupt","results","stop","getSearchMovies","_x","_getSearchMovies","_callee2","query","_yield$axios$get2","_context2","getMovieDetails","_x2","_getMovieDetails","_callee3","movieId","_yield$axios$get3","_context3","getMovieCast","_x3","_getMovieCast","_callee4","response","_context4","getMovieReviews","_x4","_getMovieReviews","_callee5","_context5","_ref","isLoading","_jsx","ProgressBar","visible","height","width","color","ariaLabel","wrapperStyle","wrapperClass","styled","require","default","MoviesLayout","ul","_templateObject","_taggedTemplateLiteral","MovieItem","li","_templateObject2","Card","div","_templateObject3","Img","img","_templateObject4","movies","location","useLocation","_Fragment","children","map","_ref2","id","original_title","poster_path","Link","state","from","to","_jsxs","src","alt","AiOutlineFileImage","size","TitleText","title","SearchForm","SearchButton","SearchInput","paramsForNotify","position","timeout","fontSize","onSearch","_useState","useState","_useState2","_slicedToArray","setQuery","onSubmit","e","preventDefault","Notify","value","onChange","event","target","toLowerCase","trim","type","name","autoComplete","autoFocus","placeholder","SlMagnifier","_searchParams$get","_useSearchParams","useSearchParams","_useSearchParams2","searchParams","setSearchParams","setMovies","_useState3","_useState4","loading","setLoading","_useState5","_useState6","error","setError","moviesTitle","get","useEffect","then","movieByQuery","console","log","catch","finally","Title","message","SearchBar","length","Movies","Outlet","Loader"],"sourceRoot":""}