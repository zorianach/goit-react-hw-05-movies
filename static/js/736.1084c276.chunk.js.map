{"version":3,"file":"static/js/736.1084c276.chunk.js","mappings":"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","sources":["api/api.js","components/Cast/Cast.styled.jsx","components/Cast/Cast.jsx"],"sourcesContent":["import axios from 'axios';\n\n\nconst baseURL = \"https://api.themoviedb.org/3\";\nconst KEY = \"b8999c34735e65003074ef0d1b66827f\";\n\nasync function getMovies() {\n    const url = `${baseURL}/trending/movie/day?api_key=${KEY}`\n    const {data} = await axios.get(url);\n    return data.results;\n};\n\nasync function getSearchMovies( query) {\n    const url = `${baseURL}/search/movie?api_key=${KEY}&query=${query}`\n    const {data} = await axios.get(url);\n    return data.results;\n};\n\nasync function getMovieDetails(movieId) {\n    const url = `${baseURL}/movie/${movieId}?api_key=${KEY}`\n    const {data} = await axios.get(url);\n    return data;\n};\n\nasync function getMovieCast(movieId) {\n    const url = `${baseURL}/movie/${movieId}/credits?api_key=${KEY}`\n    const response = await axios.get(url);\n    return response.data;\n};\n\nasync function getMovieReviews(movieId) {\n    const url = `${baseURL}/movie/${movieId}/reviews?api_key=${KEY}`\n    const response = await axios.get(url);\n    return response.data;\n};\n\nexport {getMovies, getSearchMovies, getMovieDetails, getMovieCast, getMovieReviews}","import styled from \"styled-components\";\n\n\nconst CastContainer = styled.ul`\ndisplay: flex;\nflex-wrap: wrap;\njustify-content: center;\ngap: 10px;\nmargin-top: 16px;\nmargin-bottom: 0;\npadding: 0;\nmargin-left: auto;\nmargin-right: auto;\n\n//   display: flex;\n//   justify-content: center;\n//   flex-wrap: wrap;\n//   text-align: center;\n//   padding-top: 30px;\n//   padding-bottom: 30px;\n//   gap: 20px;\n`;\n\nconst CastCard = styled.li`\nmax-width: min-content;\nbackground-color: #f6e7bd;\nborder-radius: 15px;\npadding: 8px;\ntext-wrap: wrap;\n  img:hover {\n    scale: 1.02; \n  }\n\n  span{\n    font-weight: 600; \n    color: rgb(32, 12, 51); }\n`;\n\n// const NameTitle = styled.p`\n// scale: 1.02;\n//   margin: 5px;\n// `;\n// const CharacterTitle = styled.p`\n//   margin: 5px;\n// `;\nconst ImgPlaceholder = styled.div`\nwidth: 200px;\nheight: 300px;\nalign-items: center;\n`\n\nconst Info = styled.p`\n\n`\n\nexport {CastCard, CastContainer, ImgPlaceholder, Info}","import { getMovieCast } from \"api/api\";\nimport { useEffect, useState} from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport {CastCard, CastContainer,ImgPlaceholder, Info} from './Cast.styled';\nimport { AiOutlineUser } from 'react-icons/ai';\n\n\nconst Cast =()=> {\n    const [moviesCast, setMoviesCast] = useState([]);\n    const { movieId } = useParams();\n\n    useEffect(()=>{\n        getMovieCast(movieId).then(({cast})=> {\n            // console.log(cast)\n            setMoviesCast(cast);\n            })\n        }, [movieId])\n    \n        return (\n            <>\n        <CastContainer>\n        {moviesCast.length > 0 ? (\n        moviesCast.map(({ id, profile_path, character, name }) => (\n          <CastCard key={id}>\n            {profile_path ? (\n              <img\n                src={`https://image.tmdb.org/t/p/w200${profile_path}`}\n                alt={name}\n              />\n            ) : (\n                <ImgPlaceholder>\n              <AiOutlineUser size={200} />\n              </ImgPlaceholder>\n            )}\n            <p>\n                <span> Actor:</span> {name}\n              </p>\n              <p>\n                <span>Character:</span> {character}\n              </p>\n          </CastCard>\n        ))\n      ) : (\n        <Info> Sorry, there isn't any info</Info>\n      )}\n        </CastContainer>\n        </>\n         )\n}\n\nexport default Cast;"],"names":["baseURL","KEY","getMovies","_getMovies","apply","arguments","_asyncToGenerator","_regeneratorRuntime","_callee","url","_yield$axios$get","data","_context","prev","next","concat","axios","sent","abrupt","results","stop","getSearchMovies","_x","_getSearchMovies","_callee2","query","_yield$axios$get2","_context2","getMovieDetails","_x2","_getMovieDetails","_callee3","movieId","_yield$axios$get3","_context3","getMovieCast","_x3","_getMovieCast","_callee4","response","_context4","getMovieReviews","_x4","_getMovieReviews","_callee5","_context5","CastContainer","styled","_templateObject","_taggedTemplateLiteral","CastCard","_templateObject2","ImgPlaceholder","_templateObject3","Info","_templateObject4","_useState","useState","_useState2","_slicedToArray","moviesCast","setMoviesCast","useParams","useEffect","then","_ref","cast","_jsx","_Fragment","children","length","map","_ref2","id","profile_path","character","name","_jsxs","src","alt","AiOutlineUser","size"],"sourceRoot":""}